apiVersion: apps/v1
kind: Deployment
metadata:
  name: rc-importer
  labels:
    app: rc-importer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rc-importer
  template:
    metadata:
      labels:
        app: rc-importer
    spec:
      containers:
      - name: rc-importer
        image: ${ECR_REPOSITORY_URI}:${IMAGE_TAG}
        ports:
        - containerPort: 80
        env:
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: "false"
        - name: APP_URL
          value: "https://rc-importer.example.com"
        - name: DB_CONNECTION
          value: mysql
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: rc-importer-secrets
              key: db-host
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: rc-importer-secrets
              key: db-database
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: rc-importer-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rc-importer-secrets
              key: db-password
        - name: CACHE_DRIVER
          value: redis
        - name: SESSION_DRIVER
          value: redis
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: rc-importer-secrets
              key: redis-host
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              name: rc-importer-secrets
              key: app-key
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: rc-importer
spec:
  selector:
    app: rc-importer
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rc-importer
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  rules:
  - host: rc-importer.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rc-importer
            port:
              number: 80
version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - mysql
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_URL=${APP_URL:-http://localhost:8080}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-rc_viewer}
      - DB_USERNAME=${DB_USERNAME:-rc_user}
      - DB_PASSWORD=${DB_PASSWORD:-rc_password}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
    volumes:
      - ./:/var/www/html:delegated
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - rc-network

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-rc_viewer}
      MYSQL_USER: ${DB_USERNAME:-rc_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-rc_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - rc-network

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - rc-network

networks:
  rc-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local